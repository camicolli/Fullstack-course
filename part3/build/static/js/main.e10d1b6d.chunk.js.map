{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameInputChange","newNumber","handleNumberInputChange","type","Filter","filter","handleFilter","Notification","message","isError","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","toLowerCase","includes","map","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setIsError","useEffect","console","log","personService","initialPersons","catch","err","checkUserList","event","target","preventDefault","p","find","window","confirm","updatedPerson","returnedPerson","setTimeout","updatePerson","alert","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e10d1b6d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, onDelete}) => <p>{person.name} {person.number} <button onClick={() => onDelete(person)}>Delete</button></p>\r\n\r\n\r\n\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n\r\n    <form onSubmit={props.addPerson}>\r\n        <div>\r\n            name: <input value={props.newName} onChange={props.handleNameInputChange}/>\r\n        </div>\r\n        <div>\r\n            number: <input value={props.newNumber} onChange={props.handleNumberInputChange} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return (\r\n      <div>Filter shown with <input value={filter} onChange={handleFilter}/></div>\r\n  \r\n    )\r\n  \r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if (isError) {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )}\r\n\r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )}\r\n\r\nexport default Notification;","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\n//start the json server with: json-server --watch db.json\n\nconst Persons = ({persons, filter, onDelete}) => {\n  const filterbyName = (person) => (\n    person.name.toLowerCase().includes(\n      filter.toLowerCase()\n    )\n  )\n  return (\n    <ul> {persons.filter(filterbyName).map(person => <Person key={person.name} person={person} onDelete={onDelete} />)}\n    </ul> \n  )\n\n}\nconst App = () => {\n\n  //UseStates\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  //Event handlers\n  const handleNameInputChange = (event) => setNewName(event.target.value)\n  const handleNumberInputChange = (event) => setNewNumber(event.target.value)\n  const handleFilter = (event) => setFilter(event.target.value)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        console.log(initialPersons)\n        setPersons(initialPersons)\n      }).catch(err => console.log(err))\n  },[])\n\n  const updatePerson = (p) => {\n    const confirmed = window.confirm(`${p.name} is already added to phonebook, replace the old number with the new one?`)\n    if (confirmed) {\n      console.log(`updating ${p.name}`)\n      const updatedPerson = { ...p, number: newNumber}\n      personService\n        .update(p.id, updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== updatedPerson.id ? person: returnedPerson))\n          setMessage(`Updated ${p.name}`)\n          setIsError(false)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n \n\n  //Add User\n  const addPerson = (event) => {\n\n    event.preventDefault()\n    if (newName === '' || newNumber === ''){\n      console.log(\"Doing nothing\")\n      return\n    }\n    if (checkUserList() === true) {\n      const p = persons.find(person => person.name === newName)\n      console.log(p)\n      if (p.number !== newNumber) {\n        updatePerson(p)\n\n      }\n      alert(`${newName} is already added to phonebook`)\n      setNewName('')\n      setNewNumber('')\n    }\n    //Create a new person object with the user input data\n    else {\n      const person = {\n        name: newName,\n        number: newNumber,\n        id: persons.length +1,\n      }\n      //Send the new person to the server via personServicd, and add them via response data to the list setPersons\n      personService\n        .create(person)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          console.log(\"new user added\",person)\n          setMessage(`Added ${person.name}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n\n\n        }).catch(err => console.log(err))\n\n\n    }\n\n  }\n  //Validate new user name\n  const checkUserList = () => {\n    \n    const list = persons.map(person => person.name)\n    return (\n      list.includes(newName)\n    )\n  }\n\n  const removePerson = person => {\n    const confirmed = window.confirm(`Delete ${person.name}?`)\n    if (confirmed) {\n      personService\n        .remove(person.id)\n        .then(() => {  //Create new array, where we add all people from the old array except the one we removed from db.json\n          setPersons(persons.filter(p => p.id !== person.id))\n          setIsError(false)\n          setMessage(\n            `Deleted ${person.name} from server`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          },5000)\n        }).catch(err => {\n          setIsError(true)\n          setMessage(\n            `Information of ${person.name} has already been deleted from the server`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          },5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} isError={isError} />\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h2>Add new User</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber}\n       handleNameInputChange={handleNameInputChange} handleNumberInputChange={handleNumberInputChange}/>\n      <h2>Numbers</h2>\n      <div>\n        <Persons persons={persons} filter={filter} onDelete={removePerson}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}